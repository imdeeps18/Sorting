package sort.quickSort;

import java.util.Arrays;

public class Quick {
    public static void main(String[] args) {
//        int[] arr = {4, 2, 7, 1, 9, 0, 5};
        int[] arr = {6,5,4,3,2,1,0};
        Qsort(arr, 0, arr.length-1);
        System.out.println(Arrays.toString(arr));
    }

    private static void Qsort(int[] arr, int low, int high) {
        if(low<high) {
            int part = partition(arr, low, high);
            Qsort(arr, low, part - 1);
            Qsort(arr, part + 1, high);
        }
    }

    private static int partition(int[] arr, int low, int high) {
        int pivot = arr[low];
        int i=low+1, j = high;

        while(i<=j){
            while(i<= high && arr[i]<=pivot)
                i++;
            while(j>low && arr[j]>pivot)
                j--;
            if(i<j){
                swap(arr, i,j);
            }
        }
        swap(arr, low, j);
        return j;
    }

    private static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}
